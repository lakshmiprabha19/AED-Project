/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.VictimRole;

import Business.Caregiver.Caregiver;
import Business.Enterprise.Enterprise;
import Business.Organization.CaregiverOrganization;
import Business.Organization.Organization;
import static Business.Organization.Organization.Type.Caregiver;
import Business.Person.Person;
import Business.Person.PersonDirectory;
import static Business.Role.Role.RoleType.Caregiver;
import Business.UserAccount.UserAccount;
import Business.Vitalsign.Vitalsign;
import Business.WorkQueue.EmergencyRequest;
import com.nexmo.messaging.sdk.NexmoSmsClient;
import com.nexmo.messaging.sdk.SmsSubmissionResult;
import com.nexmo.messaging.sdk.messages.TextMessage;
import java.awt.CardLayout;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Lakshmi
 */
public class SensorInputJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private PersonDirectory personDirectory;
    private Enterprise enterprise;
    /**
     * Creates new form SensorInputJPanel
     */
    public SensorInputJPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise, PersonDirectory personDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.personDirectory = personDirectory;
        this.enterprise = enterprise;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        heartRateSlider = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        bloodPressureSlider = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        respiratoryRateSlider = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        generateValues = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Leelawadee", 1, 18)); // NOI18N
        jLabel1.setText("Sensor Input");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, -1, -1));

        heartRateSlider.setBackground(new java.awt.Color(255, 153, 153));
        heartRateSlider.setFont(new java.awt.Font("Mangal", 1, 14)); // NOI18N
        heartRateSlider.setForeground(new java.awt.Color(51, 0, 51));
        heartRateSlider.setMajorTickSpacing(20);
        heartRateSlider.setMaximum(220);
        heartRateSlider.setMinorTickSpacing(20);
        heartRateSlider.setPaintLabels(true);
        heartRateSlider.setPaintTicks(true);
        heartRateSlider.setSnapToTicks(true);
        add(heartRateSlider, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, 433, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Calligraphy", 1, 14)); // NOI18N
        jLabel2.setText("Heart Rate");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 140, -1, -1));

        bloodPressureSlider.setBackground(new java.awt.Color(255, 153, 153));
        bloodPressureSlider.setFont(new java.awt.Font("Mangal", 1, 14)); // NOI18N
        bloodPressureSlider.setForeground(new java.awt.Color(51, 0, 51));
        bloodPressureSlider.setMajorTickSpacing(40);
        bloodPressureSlider.setMaximum(280);
        bloodPressureSlider.setMinorTickSpacing(40);
        bloodPressureSlider.setPaintLabels(true);
        bloodPressureSlider.setPaintTicks(true);
        bloodPressureSlider.setSnapToTicks(true);
        add(bloodPressureSlider, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 433, -1));

        jLabel3.setFont(new java.awt.Font("Lucida Calligraphy", 1, 14)); // NOI18N
        jLabel3.setText("Blood Pressure");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 260, -1, -1));

        respiratoryRateSlider.setBackground(new java.awt.Color(255, 153, 153));
        respiratoryRateSlider.setFont(new java.awt.Font("Mangal", 1, 14)); // NOI18N
        respiratoryRateSlider.setForeground(new java.awt.Color(51, 0, 51));
        respiratoryRateSlider.setMajorTickSpacing(10);
        respiratoryRateSlider.setMinorTickSpacing(10);
        respiratoryRateSlider.setPaintLabels(true);
        respiratoryRateSlider.setPaintTicks(true);
        respiratoryRateSlider.setSnapToTicks(true);
        add(respiratoryRateSlider, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 310, 433, -1));

        jLabel4.setFont(new java.awt.Font("Lucida Calligraphy", 1, 14)); // NOI18N
        jLabel4.setText("Respiratory Rate");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 380, -1, -1));

        generateValues.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        generateValues.setText("Generate Values");
        generateValues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateValuesActionPerformed(evt);
            }
        });
        add(generateValues, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 470, 239, -1));

        btnBack.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 470, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void generateValuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateValuesActionPerformed
        // TODO add your handling code here:
        int respiratoryRate = respiratoryRateSlider.getValue();
        int heartRate = heartRateSlider.getValue();
        int bloodPressure = bloodPressureSlider.getValue();     
        Calendar calendar = Calendar.getInstance();
        Date now = calendar.getTime();
        Caregiver caregiver;
        for(Person p: personDirectory.getPersonList()){
            if(p.getFirstName().equals(userAccount.getEmployee().getName())){
                Vitalsign vs = p.getVitalSignHistory().addVitalsign();
                vs.setBloodPressure(bloodPressure);
                vs.setHeartRate(heartRate);
                vs.setRespiratoryRate(respiratoryRate);
                vs.setTimestamp(now);
                int age = p.getAge();
                String result = p.getVitalSignHistory().VitalSignStatus(age, vs);
                if(result.equals("Abnormal")){
                    EmergencyRequest request = new EmergencyRequest();
                    request.setMessage("Emergency!!!!!");
                    request.setSender(userAccount);
                    request.setSender(userAccount);
                    for(Organization o:enterprise.getOrganizationDirectory().getOrganizationList()){
                        if(o instanceof CaregiverOrganization){
                            for(Caregiver c:o.getCareGiverDirectory().getCareGiverList()){
                                if(c.getPerson().getFirstName().equals(p.getFirstName())){
                                    caregiver = c;
                                    for(UserAccount ua: o.getUserAccountDirectory().getUserAccountList()){
                                        if(ua.getEmployee().getName().equals(c.getCareGiverfirstName())){
                                            request.setReceiver(ua);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    request.setStatus("Sent");

                    Organization org = null;
                    for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                        if (organization instanceof CaregiverOrganization){
                            org = organization;
                            break;
                        }
                    }
                    if (org!=null){
                        org.getWorkQueue().getWorkRequestList().add(request);
                        userAccount.getWorkQueue().getWorkRequestList().add(request);
                    }
                    JOptionPane.showMessageDialog(this, "Results are abnormal. Request to caregiver has been sent successfully!!", "Information", JOptionPane.INFORMATION_MESSAGE);
                    sendMessage();
                }
                else{
                    JOptionPane.showMessageDialog(this, "Results are Normal!!", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            
        }
    }//GEN-LAST:event_generateValuesActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void sendMessage(){
        String API_KEY = "5d9294d4";
        String API_SECRET= "c2a1db2d";
// Substitute the necessary agent phone numbers.
        String SMS_FROM = ""; 
        String SMS_TO = ""; 
        String SMS_TEXT = "There is an emergency to the person.Please respond immediately";
        NexmoSmsClient client = null;
        try {
            client = new NexmoSmsClient(API_KEY, API_SECRET);
        } catch (Exception e) {
            System.err.println("Failed to instanciate a Nexmo Client");
            e.printStackTrace();
            throw new RuntimeException("Failed to instanciate a Nexmo Client");
        }

        // Create a Text SMS Message request object ...

        TextMessage message = new TextMessage(SMS_FROM, SMS_TO, SMS_TEXT);

        // Use the Nexmo client to submit the Text Message ...

        SmsSubmissionResult[] results = null;
        try {
            results = client.submitMessage(message);
        } catch (Exception e) {
            System.err.println("Failed to communicate with the Nexmo Client");
            e.printStackTrace();
            throw new RuntimeException("Failed to communicate with the Nexmo Client");
        }

        // Evaluate the results of the submission attempt ...
        System.out.println("... Message submitted in [ " + results.length + " ] parts");
        for (int i=0;i<results.length;i++) {
            if (results[i].getStatus() == SmsSubmissionResult.STATUS_OK)
                System.out.println("SUCCESS");
            else if (results[i].getTemporaryError())
                System.out.println("TEMPORARY FAILURE - PLEASE RETRY");
            else
                System.out.println("SUBMISSION FAILED!");

            if (results[i].getMessagePrice() != null)
                System.out.println("Message-Price [ " + results[i].getMessagePrice() + " ] ...");
            if (results[i].getRemainingBalance() != null)
                System.out.println("Remaining-Balance [ " + results[i].getRemainingBalance() + " ] ...");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider bloodPressureSlider;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton generateValues;
    private javax.swing.JSlider heartRateSlider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSlider respiratoryRateSlider;
    // End of variables declaration//GEN-END:variables
}
